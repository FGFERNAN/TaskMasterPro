{"ast":null,"code":"export default {\n  mounted() {\n    document.title = \"Editar Usuario | TaskMaster Pro\";\n    const userId = this.$route.params.id;\n    this.getUserById(userId);\n  },\n  data() {\n    return {\n      users: []\n    };\n  },\n  methods: {\n    goBack() {\n      this.$router.go(-1);\n    },\n    async getRoleById(roleId) {\n      try {\n        const response = await api.get(`/role/${roleId}`);\n        this.roles = response.data.data;\n      } catch (error) {\n        console.log('Error al obtener los datos del rol: ', error);\n        alert('Hubo un problema');\n      }\n    },\n    submitForm() {\n      alert(\"Formulario enviado correctamente\");\n    }\n  }\n};","map":{"version":3,"names":["mounted","document","title","userId","$route","params","id","getUserById","data","users","methods","goBack","$router","go","getRoleById","roleId","response","api","get","roles","error","console","log","alert","submitForm"],"sources":["C:\\xampp\\htdocs\\TaskMasterPro\\trim03\\04_prototipo_funcional\\TaskMaster_Pro\\frontend\\src\\components\\EditarUsuario.vue"],"sourcesContent":["<template>\r\n  <div class=\"bg-custom\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row no-gutters header-custom\">\r\n        <div class=\"col-12 d-flex align-items-center justify-content-between p-3\">\r\n          <button class=\"btn btn-primary buton-regresar\" @click=\"goBack\">\r\n            <svg class=\"svg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n              viewBox=\"0 0 16 16\">\r\n              <path\r\n                d=\"m3.86 8.753 5.482 4.796c.646.566 1.658.106 1.658-.753V3.204a1 1 0 0 0-1.659-.753l-5.48 4.796a1 1 0 0 0 0 1.506z\" />\r\n            </svg>\r\n            <span class=\"button-text\"> Regresar</span>\r\n          </button>\r\n          <h1 class=\"mb-0 text-center flex-grow-1\">\r\n            <i class=\"fa-solid fa-user-pen\"></i>\r\n            Editar Usuario\r\n          </h1>\r\n          <img src=\"../assets/img/logotipo.png\" alt=\"Logotipo\" class=\" logo\" />\r\n        </div>\r\n      </div>\r\n      <form @submit.prevent=\"submitForm\" class=\"container form-create-project-editar-perfil needs-validation\"\r\n        novalidate>\r\n        <div class=\"row mb-4\"></div>\r\n        <div class=\"row mb-3\" v-for=\"(field, index) in fields\" :key=\"index\">\r\n          <label :for=\"field.id\" class=\"col-sm-2 col-form-label\">{{ field.label }}</label>\r\n          <div class=\"col-sm-10 has-validation\">\r\n            <div class=\"input-group mb-3\">\r\n              <span class=\"input-group-text border-input\" id=\"basic-addon1\">\r\n                <i :class=\"field.icon\"></i>\r\n              </span>\r\n              <input v-if=\"field.type !== 'select'\" :type=\"field.type\" :id=\"field.id\" class=\"form-control border-input\"\r\n                :placeholder=\"field.placeholder\" v-model=\"field.value\" :maxlength=\"field.maxlength\"\r\n                :required=\"field.required\" />\r\n              <select v-else class=\"form-select border-input\" :id=\"field.id\" v-model=\"field.value\" required>\r\n                <option v-for=\"option in field.options\" :key=\"option.value\" :value=\"option.value\">\r\n                  {{ option.text }}\r\n                </option>\r\n              </select>\r\n              <div class=\"invalid-feedback\">\r\n                {{ field.feedback }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"d-grid gap-2 col-3 mx-auto\">\r\n          <button class=\"btn btn-primary buton-form mb-4\" id=\"guardar\" type=\"submit\">Guardar</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  mounted(){\r\n    document.title = \"Editar Usuario | TaskMaster Pro\";\r\n    const userId = this.$route.params.id;\r\n    this.getUserById(userId);\r\n  },\r\n  data(){\r\n    return{\r\n      users: []\r\n    }\r\n  },\r\n  methods: {\r\n    goBack() {\r\n      this.$router.go(-1); \r\n    },\r\n    async getRoleById(roleId){\r\n      try {\r\n        const response = await api.get(`/role/${roleId}`);\r\n        this.roles = response.data.data;\r\n      } catch(error) {\r\n        console.log('Error al obtener los datos del rol: ', error);\r\n        alert('Hubo un problema');\r\n      }\r\n    },\r\n    submitForm() {\r\n      alert(\"Formulario enviado correctamente\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n@import \"@/../../assets/css/EditarPerfil.css\";\r\n</style>"],"mappings":"AAqDA,eAAe;EACbA,OAAOA,CAAA,EAAE;IACPC,QAAQ,CAACC,KAAI,GAAI,iCAAiC;IAClD,MAAMC,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;IACpC,IAAI,CAACC,WAAW,CAACJ,MAAM,CAAC;EAC1B,CAAC;EACDK,IAAIA,CAAA,EAAE;IACJ,OAAM;MACJC,KAAK,EAAE;IACT;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,MAAMA,CAAA,EAAG;MACP,IAAI,CAACC,OAAO,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC;IACD,MAAMC,WAAWA,CAACC,MAAM,EAAC;MACvB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,GAAG,CAACC,GAAG,CAAC,SAASH,MAAM,EAAE,CAAC;QACjD,IAAI,CAACI,KAAI,GAAIH,QAAQ,CAACR,IAAI,CAACA,IAAI;MACjC,EAAE,OAAMY,KAAK,EAAE;QACbC,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEF,KAAK,CAAC;QAC1DG,KAAK,CAAC,kBAAkB,CAAC;MAC3B;IACF,CAAC;IACDC,UAAUA,CAAA,EAAG;MACXD,KAAK,CAAC,kCAAkC,CAAC;IAC3C;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}