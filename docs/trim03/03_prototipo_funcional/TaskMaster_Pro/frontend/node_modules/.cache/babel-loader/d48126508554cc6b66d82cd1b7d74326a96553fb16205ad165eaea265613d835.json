{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelDynamic as _vModelDynamic, normalizeClass as _normalizeClass, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelCheckbox as _vModelCheckbox, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"row justify-content-center\"\n};\nconst _hoisted_3 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_4 = {\n  class: \"mb-3\"\n};\nconst _hoisted_5 = {\n  class: \"input-group mb-3 has-validation\"\n};\nconst _hoisted_6 = {\n  class: \"form-floating\"\n};\nconst _hoisted_7 = [\"type\"];\nconst _hoisted_8 = {\n  class: \"mb-3 mt-4\"\n};\nconst _hoisted_9 = {\n  class: \"input-group mb-3 has-validation\"\n};\nconst _hoisted_10 = {\n  class: \"form-floating\"\n};\nconst _hoisted_11 = [\"type\"];\nconst _hoisted_12 = {\n  key: 0,\n  class: \"invalid-feedback\"\n};\nconst _hoisted_13 = {\n  class: \"form-check form-switch ver-contraseña\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[15] || (_cache[15] = _createElementVNode(\"div\", {\n    class: \"text-center\"\n  }, [_createElementVNode(\"h1\", {\n    class: \"d-block mt-3\"\n  }, \"Crear Contraseña\")], -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[6] || (_cache[6] = _withModifiers((...args) => $options.handleSubmit && $options.handleSubmit(...args), [\"prevent\"])),\n    ref: \"form\",\n    class: \"mx-auto needs-validation custom-recuperarContraseña\",\n    novalidate: \"\"\n  }, [_createCommentVNode(\" Campo para Nueva Contraseña \"), _createElementVNode(\"div\", _hoisted_4, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    for: \"password\",\n    class: \"form-label\"\n  }, \"Nueva Contraseña*\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_5, [_cache[8] || (_cache[8] = _createElementVNode(\"span\", {\n    class: \"input-group-text\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fa-solid fa-lock\"\n  })], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.password = $event),\n    type: $data.showPassword ? 'text' : 'password',\n    class: _normalizeClass([\"form-control border-input\", {\n      'is-invalid': $setup.v$.password.$error,\n      'is-valid': !$setup.v$.password.$invalid\n    }]),\n    id: \"password\",\n    placeholder: \"Nueva contraseña\",\n    onBlur: _cache[1] || (_cache[1] = $event => $setup.v$.password.$touch())\n  }, null, 42 /* CLASS, PROPS, NEED_HYDRATION */, _hoisted_7), [[_vModelDynamic, $data.password]]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.v$.password.$errors, error => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: error.$uid,\n      class: \"invalid-feedback\"\n    }, _toDisplayString(error.$message), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)), _cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"password\"\n  }, \"Ingresa una nueva contraseña\", -1 /* HOISTED */))])])]), _createCommentVNode(\" Campo para Repetir Contraseña \"), _createElementVNode(\"div\", _hoisted_8, [_cache[12] || (_cache[12] = _createElementVNode(\"label\", {\n    for: \"confirmPassword\",\n    class: \"form-label\"\n  }, \"Repetir Contraseña*\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_9, [_cache[11] || (_cache[11] = _createElementVNode(\"span\", {\n    class: \"input-group-text\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fa-solid fa-lock\"\n  })], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_10, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.confirmPassword = $event),\n    type: $data.showPassword ? 'text' : 'password',\n    class: _normalizeClass([\"form-control border-input\", {\n      'is-invalid': $setup.v$.confirmPassword.$error || $data.backendErrors.confirmPassword,\n      'is-valid': !$setup.v$.confirmPassword.$invalid && !$data.backendErrors.confirmPassword && $data.confirmPassword\n    }]),\n    id: \"confirmPassword\",\n    placeholder: \"Repetir contraseña\",\n    onBlur: _cache[3] || (_cache[3] = $event => $setup.v$.confirmPassword.$touch())\n  }, null, 42 /* CLASS, PROPS, NEED_HYDRATION */, _hoisted_11), [[_vModelDynamic, $data.confirmPassword]]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.v$.confirmPassword.$errors, error => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: error.$uid,\n      class: \"invalid-feedback\"\n    }, _toDisplayString(error.$message), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)), $data.backendErrors.confirmPassword ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, _toDisplayString($data.backendErrors.confirmPassword), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _cache[10] || (_cache[10] = _createElementVNode(\"label\", {\n    for: \"confirmPassword\"\n  }, \"Confirmar contraseña\", -1 /* HOISTED */))])])]), _createElementVNode(\"div\", _hoisted_13, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.showPassword = $event),\n    class: \"form-check-input\",\n    type: \"checkbox\",\n    role: \"switch\",\n    id: \"viewPassword\",\n    onChange: _cache[5] || (_cache[5] = (...args) => _ctx.togglePasswordVisibility && _ctx.togglePasswordVisibility(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelCheckbox, $data.showPassword]]), _cache[13] || (_cache[13] = _createElementVNode(\"label\", {\n    class: \"form-check-label\",\n    for: \"viewPassword\"\n  }, \"Ver Contraseña\", -1 /* HOISTED */))]), _createCommentVNode(\" Botón de Enviar \"), _cache[14] || (_cache[14] = _createElementVNode(\"div\", {\n    class: \"d-grid gap-2 col-4 mx-auto\"\n  }, [_createElementVNode(\"button\", {\n    class: \"btn btn-primary mt-3 buton-recuperar-contraseña\",\n    type: \"submit\"\n  }, \"Guardar\")], -1 /* HOISTED */))], 544 /* NEED_HYDRATION, NEED_PATCH */)])])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","onSubmit","_cache","_withModifiers","args","$options","handleSubmit","ref","novalidate","_createCommentVNode","_hoisted_4","for","_hoisted_5","_hoisted_6","$event","$data","password","type","showPassword","_normalizeClass","$setup","v$","$error","$invalid","id","placeholder","onBlur","$touch","_hoisted_7","_Fragment","_renderList","$errors","error","$uid","$message","_hoisted_8","_hoisted_9","_hoisted_10","confirmPassword","backendErrors","_hoisted_11","_hoisted_12","_toDisplayString","_hoisted_13","role","onChange","_ctx","togglePasswordVisibility"],"sources":["C:\\xampp\\htdocs\\TaskMasterPro\\docs\\trim03\\03_prototipo_funcional\\TaskMaster_Pro\\frontend\\src\\components\\crearClave.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-md-6\">\r\n        <div class=\"text-center\">\r\n          <h1 class=\"d-block mt-3\">Crear Contraseña</h1>\r\n        </div>\r\n        <form @submit.prevent=\"handleSubmit\" ref=\"form\" class=\"mx-auto needs-validation custom-recuperarContraseña\"\r\n          novalidate>\r\n\r\n          <!-- Campo para Nueva Contraseña -->\r\n          <div class=\"mb-3\">\r\n            <label for=\"password\" class=\"form-label\">Nueva Contraseña*</label>\r\n            <div class=\"input-group mb-3 has-validation\">\r\n              <span class=\"input-group-text\"><i class=\"fa-solid fa-lock\"></i></span>\r\n              <div class=\"form-floating\">\r\n                <input v-model=\"password\" :type=\"showPassword ? 'text' : 'password'\" class=\"form-control border-input\"\r\n                  :class=\"{ 'is-invalid': v$.password.$error, 'is-valid': !v$.password.$invalid }\" id=\"password\"\r\n                  placeholder=\"Nueva contraseña\" @blur=\"v$.password.$touch()\" />\r\n                <div v-for=\"error in v$.password.$errors\" :key=\"error.$uid\" class=\"invalid-feedback\">\r\n                  {{ error.$message }}\r\n                </div>\r\n                <label for=\"password\">Ingresa una nueva contraseña</label>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Campo para Repetir Contraseña -->\r\n          <div class=\"mb-3 mt-4\">\r\n            <label for=\"confirmPassword\" class=\"form-label\">Repetir Contraseña*</label>\r\n            <div class=\"input-group mb-3 has-validation\">\r\n              <span class=\"input-group-text\"><i class=\"fa-solid fa-lock\"></i></span>\r\n              <div class=\"form-floating\">\r\n                <input v-model=\"confirmPassword\" :type=\"showPassword ? 'text' : 'password'\"\r\n                  class=\"form-control border-input\"\r\n                  :class=\"{ 'is-invalid': v$.confirmPassword.$error || backendErrors.confirmPassword, 'is-valid': !v$.confirmPassword.$invalid && !backendErrors.confirmPassword && confirmPassword }\"\r\n                  id=\"confirmPassword\" placeholder=\"Repetir contraseña\" @blur=\"v$.confirmPassword.$touch()\" />\r\n                <div v-for=\"error in v$.confirmPassword.$errors\" :key=\"error.$uid\" class=\"invalid-feedback\">\r\n                  {{ error.$message }}\r\n                </div>\r\n                <div v-if=\"backendErrors.confirmPassword\" class=\"invalid-feedback\">\r\n                  {{ backendErrors.confirmPassword }}\r\n                </div>\r\n                <label for=\"confirmPassword\">Confirmar contraseña</label>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          <div class=\"form-check form-switch ver-contraseña\">\r\n            <input v-model=\"showPassword\" class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"viewPassword\"\r\n              @change=\"togglePasswordVisibility\" />\r\n            <label class=\"form-check-label\" for=\"viewPassword\">Ver Contraseña</label>\r\n          </div>\r\n\r\n\r\n          <!-- Botón de Enviar -->\r\n          <div class=\"d-grid gap-2 col-4 mx-auto\">\r\n            <button class=\"btn btn-primary mt-3 buton-recuperar-contraseña\" type=\"submit\">Guardar</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from \"@/services/api\";\r\nimport { useVuelidate } from '@vuelidate/core';\r\nimport { required, helpers } from '@vuelidate/validators';\r\nimport { maxLength } from 'vuelidate/lib/validators';\r\nimport { minLength } from 'vuelidate/lib/validators';\r\nimport { useRoute } from \"vue-router\";\r\n\r\nexport default {\r\n  setup() {\r\n    return { v$: useVuelidate() };\r\n  },\r\n  mounted() {\r\n    document.title = \"Crear Clave | TaskMaster Pro\";\r\n  },\r\n  data() {\r\n    return {\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      showPassword: false,\r\n      errors: {},\r\n      token: null,\r\n      backendErrors: {}\r\n    };\r\n  },\r\n  validations() {\r\n    return {\r\n      password: {\r\n        required: helpers.withMessage('Ingresa la nueva contraseña', required),\r\n        minLength: helpers.withMessage('Minimo 8 caracteres', minLength(8)),\r\n        maxLength: helpers.withMessage('Maximo 20 caracteres', maxLength(20)),\r\n        strong: helpers.withMessage(\r\n          'Debe contener mayusculas, minusculas y un caracter especial (#$*)',\r\n          (value) => /^(?=.*[a-z])(?=.*[A-Z])(?=.*[#$*]).{8,}$/.test(value)\r\n        )\r\n      },\r\n      confirmPassword: {\r\n        required: helpers.withMessage('Confirma la contraseña', required)\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    const route = useRoute();\r\n    this.token = route.params.token;\r\n  },\r\n  methods: {\r\n    async handleSubmit() {\r\n      const isValid = await this.v$.$validate();\r\n      if (!isValid) return;\r\n      if (this.password === this.confirmPassword) {\r\n        try {\r\n          const response = await api.post(`/recoveryPassword/${this.token}`, {\r\n            password: this.password\r\n          });\r\n          console.log(response.data);\r\n          alert(response.data.message);\r\n          this.$router.push('/iniciar-sesion');\r\n        } catch (error) {\r\n          if (error.response && error.response.data) {\r\n            const serverErrors = error.response.data;\r\n            if (serverErrors.message === 'Token invalido o expirado') {\r\n              alert('Token invalido o expirado');\r\n              this.backendErrors.confirmPassword = 'Token invalido o expirado';\r\n              this.v$.confirmPassword.$reset();\r\n            } else {\r\n              alert(serverErrors.message);\r\n              console.log(serverErrors);\r\n              this.$router.push('/error500');\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        this.backendErrors.confirmPassword = 'Contraseñas no coinciden';\r\n        this.v$.confirmPassword.$reset();\r\n      }\r\n\r\n    },\r\n    togglePassword(field) {\r\n      if (field === 1) {\r\n        this.showPassword = !this.showPassword;\r\n      } else if (field === 2) {\r\n        this.showConfirmPassword = !this.showConfirmPassword;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}